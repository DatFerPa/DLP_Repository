#source "entrada.grande.Practica12.txt"
	' var pair struct{integer int,  character char,  } ( offset 0 )
	' var acme[2] struct{employees[2] struct{age int,  },  } ( offset 3 )
	' var fibonacci[8][3] int ( offset 11 )
call main
halt
 p:
	' * Parameters
	' * Local variables
	enter 0
	ret 0, 0, 0
 f:
	' * Parameters
	' var r float32 ( offset 6 )
	' var e int ( offset 4 )
	' * Local variables
	' var real float32 ( offset -4 )
	' var c char ( offset -5 )
	' var result int ( offset -7 )
	enter 7
#line 20
	pusha bp
	pushi -4
	addi
	pusha bp
	pushi 6
	addi
	loadf
	pushf 10.0
	mulf
	storef
#line 21
	pusha bp
	pushi -5
	addi
	pushb 48
	storeb
#line 28
	pusha bp
	pushi 4
	addi
	loadi
	pushi 256
	lti
	jz flag_0
#line 23
	pusha bp
	pushi -5
	addi
	pusha bp
	pushi 4
	addi
	loadi
	i2b
	storeb
#line 24
	pusha bp
	pushi -7
	addi
	pusha bp
	pushi -5
	addi
	loadb
	b2i
	storei
	jmp flag_1
 flag_0:
#line 27
	pusha bp
	pushi -7
	addi
	pusha bp
	pushi -4
	addi
	loadf
	f2i
	storei
 flag_1:
#line 29
	pusha bp
	pushi -7
	addi
	loadi
	ret 2, 7, 6
 initialize:
	' * Parameters
	' * Local variables
	' var i int ( offset -2 )
	enter 2
#line 34
	pusha 11
	pushi 0
	pushi 6
	muli
	addi
	pushi 0
	pushi 2
	muli
	addi
	pushi 0
	storei
#line 35
	pusha 11
	pushi 0
	pushi 6
	muli
	addi
	pushi 1
	pushi 2
	muli
	addi
	pushi 1
	storei
#line 36
	pusha 11
	pushi 0
	pushi 6
	muli
	addi
	pushi 2
	pushi 2
	muli
	addi
	pushi 1
	storei
#line 37
	pusha bp
	pushi -2
	addi
	pushi 1
	storei
#line 43
 flag_2:
	pusha bp
	pushi -2
	addi
	loadi
	pushi 8
	lti
	jz flag_3
#line 39
	pusha 11
	pusha bp
	pushi -2
	addi
	loadi
	pushi 6
	muli
	addi
	pushi 0
	pushi 2
	muli
	addi
	pusha 11
	pusha bp
	pushi -2
	addi
	loadi
	pushi 1
	subi
	pushi 6
	muli
	addi
	pushi 1
	pushi 2
	muli
	addi
	loadi
	storei
#line 40
	pusha 11
	pusha bp
	pushi -2
	addi
	loadi
	pushi 6
	muli
	addi
	pushi 1
	pushi 2
	muli
	addi
	pusha 11
	pusha bp
	pushi -2
	addi
	loadi
	pushi 1
	subi
	pushi 6
	muli
	addi
	pushi 2
	pushi 2
	muli
	addi
	loadi
	storei
#line 41
	pusha 11
	pusha bp
	pushi -2
	addi
	loadi
	pushi 6
	muli
	addi
	pushi 2
	pushi 2
	muli
	addi
	pusha 11
	pusha bp
	pushi -2
	addi
	loadi
	pushi 6
	muli
	addi
	pushi 0
	pushi 2
	muli
	addi
	loadi
	pusha 11
	pusha bp
	pushi -2
	addi
	loadi
	pushi 6
	muli
	addi
	pushi 1
	pushi 2
	muli
	addi
	loadi
	addi
	storei
#line 42
	pusha bp
	pushi -2
	addi
	pusha bp
	pushi -2
	addi
	loadi
	pushi 1
	addi
	storei
	jmp flag_2
 flag_3:
	ret 0, 2, 0
 main:
	' * Parameters
	' * Local variables
	' var i int ( offset -2 )
	' var j int ( offset -4 )
	enter 4
#line 50
	call p
	
#line 51
	pusha bp
	pushi -2
	addi
	pushi 0
	storei
#line 52
	pusha 0
	pushi 2
	addi
	pushb 48
	storeb
#line 53
	pusha 0
	pushi 0
	addi
	pushb 48
	b2i
	storei
#line 56
	' * Write
	pusha bp
	pushi -2
	addi
	loadi
	i2f
	pusha 0
	pushi 2
	addi
	loadb
	b2i
	call f
	outi
	' * Write
	pushb 202
	outb
#line 57
	pushf 1.3
	pushi 2
	call f
	popi
#line 59
	call initialize
	
#line 60
	pusha bp
	pushi -2
	addi
	pushi 0
	storei
#line 67
 flag_4:
	pusha bp
	pushi -2
	addi
	loadi
	pushi 8
	lti
	jz flag_5
#line 65
	' * Write
	pushb 40
	outb
	' * Write
	pusha bp
	pushi -2
	addi
	loadi
	pushi 1
	addi
	outi
	' * Write
	pushb 41
	outb
	' * Write
	pusha 11
	pusha bp
	pushi -2
	addi
	loadi
	pushi 6
	muli
	addi
	pushi 0
	pushi 2
	muli
	addi
	loadi
	outi
	' * Write
	pushb 43
	outb
	' * Write
	pusha 11
	pusha bp
	pushi -2
	addi
	loadi
	pushi 6
	muli
	addi
	pushi 1
	pushi 2
	muli
	addi
	loadi
	outi
	' * Write
	pushb 61
	outb
	' * Write
	pusha 11
	pusha bp
	pushi -2
	addi
	loadi
	pushi 6
	muli
	addi
	pushi 2
	pushi 2
	muli
	addi
	loadi
	outi
	' * Write
	pushb 202
	outb
#line 66
	pusha bp
	pushi -2
	addi
	pusha bp
	pushi -2
	addi
	loadi
	pushi 1
	addi
	storei
	jmp flag_4
 flag_5:
#line 69
	pusha 3
	pushi 1
	pushi 4
	muli
	addi
	pushi 0
	addi
	pushi 1
	pushi 2
	muli
	addi
	pushi 0
	addi
	pushi 56
	storei
#line 71
	' * Write
	pusha 3
	pushi 1
	pushi 4
	muli
	addi
	pushi 0
	addi
	pushi 1
	pushi 2
	muli
	addi
	pushi 0
	addi
	loadi
	outi
	' * Write
	pushb 202
	outb
#line 72
	pusha bp
	pushi -2
	addi
	pushi 0
	storei
#line 80
 flag_6:
	pusha bp
	pushi -2
	addi
	loadi
	pushi 2
	lti
	jz flag_7
#line 74
	pusha bp
	pushi -4
	addi
	pushi 0
	storei
#line 78
 flag_8:
	pusha bp
	pushi -4
	addi
	loadi
	pushi 2
	lti
	jz flag_9
#line 76
	pusha 3
	pusha bp
	pushi -2
	addi
	loadi
	pushi 4
	muli
	addi
	pushi 0
	addi
	pusha bp
	pushi -4
	addi
	loadi
	pushi 2
	muli
	addi
	pushi 0
	addi
	pusha bp
	pushi -2
	addi
	loadi
	pusha bp
	pushi -4
	addi
	loadi
	addi
	storei
#line 77
	pusha bp
	pushi -4
	addi
	pusha bp
	pushi -4
	addi
	loadi
	pushi 1
	addi
	storei
	jmp flag_8
 flag_9:
#line 79
	pusha bp
	pushi -2
	addi
	pusha bp
	pushi -2
	addi
	loadi
	pushi 1
	addi
	storei
	jmp flag_6
 flag_7:
#line 83
	pusha bp
	pushi -2
	addi
	pushi 0
	storei
#line 92
 flag_10:
	pusha bp
	pushi -2
	addi
	loadi
	pushi 2
	lti
	jz flag_11
#line 85
	pusha bp
	pushi -4
	addi
	pushi 0
	storei
#line 90
 flag_12:
	pusha bp
	pushi -4
	addi
	loadi
	pushi 2
	lti
	jz flag_13
#line 88
	' * Write
	pusha 3
	pusha bp
	pushi -2
	addi
	loadi
	pushi 4
	muli
	addi
	pushi 0
	addi
	pusha bp
	pushi -4
	addi
	loadi
	pushi 2
	muli
	addi
	pushi 0
	addi
	loadi
	outi
	' * Write
	pushb 32
	outb
#line 89
	pusha bp
	pushi -4
	addi
	pusha bp
	pushi -4
	addi
	loadi
	pushi 1
	addi
	storei
	jmp flag_12
 flag_13:
#line 91
	pusha bp
	pushi -2
	addi
	pusha bp
	pushi -2
	addi
	loadi
	pushi 1
	addi
	storei
	jmp flag_10
 flag_11:
	ret 0, 4, 0
